/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var l=Object.defineProperty;var v=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var T=Object.prototype.hasOwnProperty;var f=(s,a)=>{for(var t in a)l(s,t,{get:a[t],enumerable:!0})},w=(s,a,t,e)=>{if(a&&typeof a=="object"||typeof a=="function")for(let n of y(a))!T.call(s,n)&&n!==t&&l(s,n,{get:()=>a[n],enumerable:!(e=v(a,n))||e.enumerable});return s};var S=s=>w(l({},"__esModule",{value:!0}),s);var b={};f(b,{default:()=>h});module.exports=S(b);var i=require("obsidian");function c(s,a={},...t){let e=typeof s=="function"?s(a):Object.assign(document.createElement(s),a);return e.append(...t),e}var P={},H="0123456789abcdefghijklmnopqrstuv",p="0123456789ABCDEFGHJKMNPQRSTVWXYZ",g=p.length,k=Object.fromEntries(H.split("").map((s,a)=>[s,p[a]])),F={O:"0",L:"1",I:"1",U:"V"},M=new TextEncoder;async function N(s){let a=M.encode(s),t=new Uint8Array(await crypto.subtle.digest("SHA-256",a)),e=(t[0]<<16|t[1]<<8|t[2]<<0)%g**4,[n,o,r,u]=e.toString(g).padStart(4,"0").split("").map(E=>k[E]);return`${n}${o}-${r}${u}`}function m(s){return s=s.toUpperCase().split("").map(a=>{var t;return(t=F[a])!=null?t:a}).filter(a=>p.includes(a)).slice(0,4).join(""),s.length>2&&(s=s.slice(0,2)+"-"+s.slice(2)),s}var d=class extends i.SuggestModal{constructor(t,e){super(t);this.plugin=e,this.setPlaceholder("__-__"),this.inputEl.classList.add("note-code")}renderSuggestion({hash:t,path:e},n){n.append(c("div",{},e),c("small",{className:"note-code"},c("strong",{},this.inputEl.value),t.slice(this.inputEl.value.length)))}getSuggestions(t){t=m(t),this.inputEl.value=t;let e=[];for(let[n,o]of this.plugin.hashesToPaths.entries())n.startsWith(t)&&e.push({hash:n,path:o});return e}onChooseSuggestion({hash:t,path:e},n){this.plugin.openNoteForHash(t)}},h=class extends i.Plugin{constructor(){super(...arguments);this.hashesToPaths=new Map;this.pathsToHashes=new Map;this.menu=(()=>{let t=new i.Menu;return t.addItem(e=>e.setTitle("Copy note code").setIcon("binary").onClick(()=>this.copyNoteCode())),t.addItem(e=>e.setTitle("Copy note code URL").setIcon("link").onClick(()=>this.copyNoteCodeURL())),t.addItem(e=>e.setTitle("Search note codes").setIcon("search").onClick(()=>this.openSearchModal())),t})()}async addPath(t){let e=await N(t);return this.hashesToPaths.set(e,t),this.pathsToHashes.set(t,e),e}async removePath(t){let e=this.pathsToHashes.get(t);e&&(this.hashesToPaths.delete(e),this.pathsToHashes.delete(t))}async getHashForPath(t){let e=this.pathsToHashes.get(t);return e||await this.addPath(t)}async getHashForActiveFile(){let t=this.app.workspace.getActiveFile();if(t)return this.getHashForPath(t.path)}async copyNoteCode(){let t=await this.getHashForActiveFile();t&&navigator.clipboard.writeText(t)}async copyNoteCodeURL(){let t=await this.getHashForActiveFile();t&&navigator.clipboard.writeText(`obsidian://note-codes/open?code=${t}`)}async openNoteForHash(t){t=m(t);let e=this.hashesToPaths.get(t);if(!e){let o=new DocumentFragment;o.append(c("span",{},"No such note code: ",c("strong",{className:"note-code"},t.padEnd(5,"_")))),new i.Notice(o);return}let n=e&&this.app.vault.getFileByPath(e);n?this.app.workspace.getLeaf().openFile(n):new i.Notice(`File not found: ${e}`)}async setStatusBar(t){let e="__-__";t&&(e=await this.getHashForPath(t.path)),this.statusBarItemEl.setText(e);let n=document.querySelector(".is-mobile .workspace-drawer:not(:has(.side-dock-ribbon)) .workspace-drawer-header-name");if(!n)return;document.querySelectorAll(".workspace-drawer-header-name .note-code").forEach(r=>r.remove());let o=c("div",{className:"note-code clickable-icon"},e);n.append(o),this.registerDomEvent(o,"click",r=>this.openSearchModal()),this.registerDomEvent(o,"contextmenu",r=>this.menu.showAtMouseEvent(r))}openSearchModal(){new d(this.app,this).open()}async onload(){await this.loadSettings();for(let t of this.app.vault.getFiles())this.addPath(t.path);this.registerEvent(this.app.vault.on("rename",(t,e)=>{this.removePath(e),this.addPath(t.path),this.setStatusBar(this.app.workspace.getActiveFile())})),this.registerEvent(this.app.vault.on("create",t=>this.addPath(t.path))),this.registerEvent(this.app.vault.on("delete",t=>this.removePath(t.path))),this.registerEvent(this.app.workspace.on("file-open",t=>this.setStatusBar(t))),this.statusBarItemEl=this.addStatusBarItem(),this.statusBarItemEl.addClass("mod-clickable"),this.statusBarItemEl.addClass("note-code"),this.registerDomEvent(this.statusBarItemEl,"click",()=>this.openSearchModal()),this.registerDomEvent(this.statusBarItemEl,"contextmenu",t=>{this.menu.showAtMouseEvent(t)}),this.setStatusBar(this.app.workspace.getActiveFile()),this.addCommand({id:"search",name:"Search for note codes",callback:()=>this.openSearchModal()}),this.addCommand({id:"copy",name:"Copy note code",callback:()=>this.copyNoteCode()}),this.addCommand({id:"copy-url",name:"Copy note code URL",callback:()=>this.copyNoteCodeURL()}),this.registerObsidianProtocolHandler("note-codes/open",async({action:t,code:e})=>{this.openNoteForHash(e)})}onunload(){document.querySelectorAll(".workspace-drawer-header-name .note-code").forEach(t=>t.remove())}async loadSettings(){this.settings=Object.assign({},P,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}};

/* nosourcemap */